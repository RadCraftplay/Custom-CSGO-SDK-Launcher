//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Distroir.CustomSDKLauncher.UI.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Licenses {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Licenses() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Distroir.CustomSDKLauncher.UI.Resources.Licenses", typeof(Licenses).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fugue Icons
        ///
        ///(C) 2013 Yusuke Kamiyamane. All rights reserved.
        ///
        ///These icons are licensed under a Creative Commons
        ///Attribution 3.0 License.
        ///&lt;http://creativecommons.org/licenses/by/3.0/&gt;
        ///
        ///If you can&apos;t or don&apos;t want to provide attribution, please
        ///purchase a royalty-free license.
        ///&lt;http://p.yusukekamiyamane.com/&gt;
        ///
        ///I&apos;m unavailable for custom icon design work. But your
        ///suggestions are always welcome!
        ///&lt;mailto:p@yusukekamiyamane.com&gt;
        ///
        ///------------------------------------------------------------
        ///
        ///All [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FUGUE_README {
            get {
                return ResourceManager.GetString("FUGUE_README", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MIT License (MIT)
        ///
        ///Copyright (c) 2016 Shravan Rajinikanth
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy
        ///of this software and associated documentation files (the &quot;Software&quot;), to deal
        ///in the Software without restriction, including without limitation the rights
        ///to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        ///copies of the Software, and to permit persons to whom the Software is
        ///furnished to do so, subject to the following conditions:
        ///
        ///The above copyr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Gameloop_Vdf {
            get {
                return ResourceManager.GetString("Gameloop_Vdf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom SDK Launcher
        ///Copyright (C) 2017 Distroir
        ///
        ///This program is free software: you can redistribute it and/or modify
        ///it under the terms of the GNU General Public License as published by
        ///the Free Software Foundation, either version 3 of the License, or
        ///(at your option) any later version.
        ///
        ///This program is distributed in the hope that it will be useful,
        ///but WITHOUT ANY WARRANTY; without even the implied warranty of
        ///MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        ///GNU General Public Lic [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string License__Only_custom_sdk_launcher_ {
            get {
                return ResourceManager.GetString("License__Only_custom_sdk_launcher_", resourceCulture);
            }
        }
    }
}
